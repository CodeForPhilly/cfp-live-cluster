apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "vaultwarden.fullname" . }}-postgresql
  labels:
    {{- include "vaultwarden.labels" . | nindent 4 }}
    component: postgresql
spec:
  replicas: {{ .Values.database.postgresql.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "vaultwarden.name" . }}-postgresql
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: postgresql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "vaultwarden.name" . }}-postgresql
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- with .Values.database.postgresql.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
    {{- with .Values.database.postgresql.imagePullSecrets }}
      imagePullSecrets:
      {{ toYaml . | nindent 6 }}
    {{- end }}
      containers:
      - name: postgresql
        image: {{ .Values.database.postgresql.image.repository }}:{{ .Values.database.postgresql.image.tag }}
        {{- if .Values.database.postgresql.config }}
        envFrom:
        - configMapRef:
            name: {{ include "vaultwarden.fullname" . }}-postgresql
        {{- end }}
        ports:
        - containerPort: 5432
          name: postgresql
        {{- if .Values.database.postgresql.volumes }}
        volumeMounts:
          {{- if .Values.database.postgresql.volumes.data }}
          - name: data
            mountPath: /var/lib/postgresql/data
            subPath: postgresql-data
          {{- end }}
        {{- end }}
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 15
          periodSeconds: 20

      {{- with .Values.database.postgresql.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.database.postgresql.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.database.postgresql.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

  {{- if .Values.database.postgresql.volumes }}
  volumeClaimTemplates:
    {{- if .Values.database.postgresql.volumes.data }}
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        {{- if .Values.database.postgresql.volumes.data.storageClassName }}
        storageClassName: {{ .Values.database.postgresql.volumes.data.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.database.postgresql.volumes.data.size }}
    {{- end }}
  {{- end }}
