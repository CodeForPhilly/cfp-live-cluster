apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: squadquest-supabase
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: supabase
    helm.sh/chart: supabase-0.1.3
  name: squadquest-supabase-supabase-analytics
  namespace: squadquest-supabase
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: squadquest-supabase
      app.kubernetes.io/name: supabase-analytics
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: squadquest-supabase
        app.kubernetes.io/name: supabase-analytics
    spec:
      containers:
        - env:
            - name: DB_DRIVER
              value: postgresql
            - name: DB_PORT
              value: '5432'
            - name: DB_SCHEMA
              value: _analytics
            - name: DB_USERNAME
              value: supabase_admin
            - name: FEATURE_FLAG_OVERRIDE
              value: multibackend=true
            - name: LOGFLARE_NODE_HOST
              value: 127.0.0.1
            - name: LOGFLARE_SINGLE_TENANT
              value: 'true'
            - name: LOGFLARE_SUPABASE_MODE
              value: 'true'
            - name: DB_HOSTNAME
              value: squadquest-supabase-supabase-db
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: squadquest-supabase-db
            - name: DB_PASSWORD_ENC
              valueFrom:
                secretKeyRef:
                  key: password_encoded
                  name: squadquest-supabase-db
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database
                  name: squadquest-supabase-db
            - name: LOGFLARE_API_KEY
              valueFrom:
                secretKeyRef:
                  key: apiKey
                  name: squadquest-supabase-analytics
            - name: POSTGRES_BACKEND_URL
              value: >-
                $(DB_DRIVER)://$(DB_USERNAME):$(DB_PASSWORD_ENC)@$(DB_HOSTNAME):$(DB_PORT)/$(DB_DATABASE)
            - name: POSTGRES_BACKEND_SCHEMA
              value: $(DB_SCHEMA)
            - name: LOGFLARE_FEATURE_FLAG_OVERRIDE
              value: $(FEATURE_FLAG_OVERRIDE)
          image: 'supabase/logflare:1.10.0'
          imagePullPolicy: IfNotPresent
          name: supabase-analytics
          ports:
            - containerPort: 4000
              protocol: TCP
          securityContext: {}
      initContainers:
        - args:
            - |
              until pg_isready -h $(DB_HOST) -p $(DB_PORT) -U $(DB_USER); do
              echo "Waiting for database to start..."
              sleep 2
              done
            - echo "Database is ready"
          command:
            - /bin/sh
            - '-c'
          env:
            - name: DB_HOST
              value: squadquest-supabase-supabase-db
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: squadquest-supabase-db
            - name: DB_PORT
              value: '5432'
          image: 'postgres:15-alpine'
          imagePullPolicy: IfNotPresent
          name: init-db
      securityContext: {}
      serviceAccountName: squadquest-supabase-supabase-analytics
