apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app.kubernetes.io/instance: code-for-philly
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: code-for-philly
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: emergence-site-1.0.0
  name: code-for-philly-backups
  namespace: code-for-philly
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      activeDeadlineSeconds: 2700
      template:
        spec:
          containers:
            - args:
                - >
                  # resolve pod name for running instance (there should just be
                  one)

                  pod_name=$(kubectl get pod \
                      -l app.kubernetes.io/name=code-for-philly \
                      -l app.kubernetes.io/instance=code-for-philly \
                      --field-selector=status.phase==Running \
                      -o jsonpath='{.items[0].metadata.name}'
                  )


                  # snapshot mysql database and site data to remote restic
                  repository

                  kubectl exec "${pod_name}" -- bash -c "

                    # configure restic repository
                    export RESTIC_REPOSITORY='$RESTIC_REPOSITORY'
                    export RESTIC_PASSWORD='$RESTIC_PASSWORD'
                    export B2_ACCOUNT_ID='$B2_ACCOUNT_ID'
                    export B2_ACCOUNT_KEY='$B2_ACCOUNT_KEY'
                    export AWS_ACCESS_KEY_ID='$AWS_ACCESS_KEY_ID'
                    export AWS_SECRET_ACCESS_KEY='$AWS_SECRET_ACCESS_KEY'

                    # install CLI dependencies
                    hab pkg install jarvus/restic core/gzip core/curl

                    # get composite service name
                    composite_svc_name=\"\$(hab svc status | tail -n +2 | awk '{print \$1}' | grep -- "-composite/" | cut -d '/' -f 1,2)\"

                    # get current database name
                    database_name=\"\$(hab pkg exec \${composite_svc_name} mysql -srNe 'SELECT SCHEMA()')\"

                    # snapshot database
                    echo \"Snapshotting database: \${database_name}\"
                    hab pkg exec \${composite_svc_name} \
                      mysqldump \
                        --default-character-set=utf8 \
                        --force \
                        --single-transaction \
                        --quick \
                        --compact \
                        --extended-insert \
                        --order-by-primary \
                        --ignore-table=\"\${database_name}.sessions\" \
                        \"\${database_name}\" \
                      | hab pkg exec core/gzip gzip --rsyncable \
                      | hab pkg exec jarvus/restic restic backup \
                        --host 'code-for-philly' \
                        --stdin \
                        --stdin-filename database.sql.gz

                    wget -q -O - --post-data "s=$?" https://nosnch.in/7083177ce3

                    # snapshot data
                    echo 'Snapshotting site data'
                    hab pkg exec jarvus/restic restic backup \
                      /hab/svc/site/data \
                      --host 'code-for-philly' \
                      --exclude='*.log' \
                      --exclude='/hab/svc/site/data/media/*x*/**'

                    # prune aged snapshots
                    echo 'Pruning snapshots'
                    hab pkg exec jarvus/restic restic forget \
                      --host 'code-for-philly' \
                      --keep-last 3 \
                      --keep-daily 7 \
                      --keep-weekly 52
                  "
              command:
                - /bin/sh
                - '-c'
              envFrom:
                - secretRef:
                    name: restic
              image: 'lachlanevenson/k8s-kubectl:v1.18.16'
              imagePullPolicy: IfNotPresent
              name: kubectl
          restartPolicy: Never
          serviceAccountName: code-for-philly-cron
  schedule: 40 * * * *
